// This file is generated by scripts/generate-node-unions.ts.
// Do not edit this file directly.

import type ArrayExpression from './ArrayExpression';
import type ArrayPattern from './ArrayPattern';
import type ArrowFunctionExpression from './ArrowFunctionExpression';
import type AssignmentExpression from './AssignmentExpression';
import type AssignmentPattern from './AssignmentPattern';
import type AwaitExpression from './AwaitExpression';
import type BinaryExpression from './BinaryExpression';
import type BlockStatement from './BlockStatement';
import type BreakStatement from './BreakStatement';
import type CallExpression from './CallExpression';
import type ChainExpression from './ChainExpression';
import type ClassDeclaration from './ClassDeclaration';
import type ClassExpression from './ClassExpression';
import type ConditionalExpression from './ConditionalExpression';
import type ContinueStatement from './ContinueStatement';
import type DebuggerStatement from './DebuggerStatement';
import type DoWhileStatement from './DoWhileStatement';
import type EmptyStatement from './EmptyStatement';
import type ExportAllDeclaration from './ExportAllDeclaration';
import type ExportDefaultDeclaration from './ExportDefaultDeclaration';
import type ExportNamedDeclaration from './ExportNamedDeclaration';
import type ExpressionStatement from './ExpressionStatement';
import type ForInStatement from './ForInStatement';
import type ForOfStatement from './ForOfStatement';
import type ForStatement from './ForStatement';
import type FunctionDeclaration from './FunctionDeclaration';
import type FunctionExpression from './FunctionExpression';
import type Identifier from './Identifier';
import type IfStatement from './IfStatement';
import type ImportDeclaration from './ImportDeclaration';
import type ImportExpression from './ImportExpression';
import type JSXElement from './JSXElement';
import type JSXExpressionContainer from './JSXExpressionContainer';
import type JSXFragment from './JSXFragment';
import type JSXIdentifier from './JSXIdentifier';
import type JSXMemberExpression from './JSXMemberExpression';
import type JSXNamespacedName from './JSXNamespacedName';
import type JSXSpreadChild from './JSXSpreadChild';
import type JSXText from './JSXText';
import type LabeledStatement from './LabeledStatement';
import type Literal from './Literal';
import type LogicalExpression from './LogicalExpression';
import type MemberExpression from './MemberExpression';
import type MetaProperty from './MetaProperty';
import type NewExpression from './NewExpression';
import type ObjectExpression from './ObjectExpression';
import type ObjectPattern from './ObjectPattern';
import type RestElement from './RestElement';
import type ReturnStatement from './ReturnStatement';
import type SequenceExpression from './SequenceExpression';
import type StaticBlock from './StaticBlock';
import type SwitchStatement from './SwitchStatement';
import type TaggedTemplateExpression from './TaggedTemplateExpression';
import type TemplateLiteral from './TemplateLiteral';
import type ThisExpression from './ThisExpression';
import type ThrowStatement from './ThrowStatement';
import type TryStatement from './TryStatement';
import type UnaryExpression from './UnaryExpression';
import type UpdateExpression from './UpdateExpression';
import type VariableDeclaration from './VariableDeclaration';
import type WhileStatement from './WhileStatement';
import type YieldExpression from './YieldExpression';

export type BindingPattern = Identifier | ArrayPattern | ObjectPattern;

export type DestructuringPattern =
	| AssignmentPattern
	| BindingPattern
	| MemberExpression
	| RestElement;

export type Expression =
	| ArrayExpression
	| ArrowFunctionExpression
	| AssignmentExpression
	| AwaitExpression
	| BinaryExpression
	| CallExpression
	| ChainExpression
	| ClassExpression
	| ConditionalExpression
	| FunctionExpression
	| Identifier
	| ImportExpression
	| Literal
	| LogicalExpression
	| MemberExpression
	| MetaProperty
	| NewExpression
	| ObjectExpression
	| SequenceExpression
	| TaggedTemplateExpression
	| TemplateLiteral
	| ThisExpression
	| UnaryExpression
	| UpdateExpression
	| YieldExpression;

export type JSXChild = JSXElement | JSXExpressionContainer | JSXSpreadChild | JSXFragment | JSXText;

export type JSXTagNameExpression = JSXMemberExpression | JSXIdentifier | JSXNamespacedName;

export type ModuleDeclaration =
	| ExportAllDeclaration
	| ExportDefaultDeclaration
	| ExportNamedDeclaration
	| ImportDeclaration;

export type Parameter = BindingPattern | AssignmentPattern | RestElement;

export type Statement =
	| BlockStatement
	| BreakStatement
	| ClassDeclaration
	| ContinueStatement
	| DebuggerStatement
	| DoWhileStatement
	| EmptyStatement
	| ExpressionStatement
	| ForInStatement
	| ForOfStatement
	| ForStatement
	| FunctionDeclaration
	| IfStatement
	| LabeledStatement
	| ReturnStatement
	| StaticBlock
	| SwitchStatement
	| ThrowStatement
	| TryStatement
	| VariableDeclaration
	| WhileStatement;
